#!/usr/bin/env python3


import json
import logging
import os
import sys

from lib import litani
from os import path
from time import sleep

SLEEP_INTERVAL = 5
TIMEOUT = 1
cache_dir = litani.get_cache_dir()

ret = {
    "cache-dir": str(cache_dir),
    "successful": [],
    "failed": [],
    "in-progress": [],
}

pipelines = {}

run_json = None

timer = 0
while not path.exists(cache_dir / "run.json"):
    sleep(SLEEP_INTERVAL)
    timer+=SLEEP_INTERVAL
    if timer > TIMEOUT:
        raise Exception(f"Timed out waiting for run.json to be generated. Could not find file {cache_dir / 'run.json'}")

with open(cache_dir / "run.json") as f:
    run_json = json.loads(f.read())
if not run_json:
    raise Exception("Failed to parse run.json")

for pipeline in run_json["pipelines"]:
    if pipeline["status"] == "success":
        ret["successful"].append(pipeline["name"])
    elif pipeline["status"] == "fail":
        ret["failed"].append(pipeline["name"])
    elif pipeline["status"] == "in_progress":
        ret["in-progress"].append(pipeline["name"])
    else:
        raise Exception(pipeline["status"])

print(json.dumps(ret, indent=2))
